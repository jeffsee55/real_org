.post
  .body
    = p.input :body, label: false
    = p.input :user_id, as: :hidden, value: @user.id
  .options
    #options_close
      Close
      %i.fa.fa-close
    .manage-images
      %div
        %h4 Poster Image
        -if @post.image_id?
          #image.post_image{style: "background: url(#{ attachment_url(@post, :image, :fit, 408, 250) }) no-repeat center; background-size: cover"}
        -else
          #image.post_image{style: "background: url('http://placehold.it/408x250&text=No%20Image') no-repeat center; background-size: cover"}
        = p.input :remove_image, as: :boolean if @post.image_id?
        = p.attachment_field :image, direct: true, presigned: true, class: "image_upload"
      %div
        %h4 Pinterest Image
        -if @post.pinterest_image_id?
          #image.pinterest_image{style: "background: url(#{ attachment_url(@post, :pinterest_image, :fit, 408, 250) }) no-repeat center; background-size: cover"}
        -else
          #image.pinterest_image{style: "background: url('http://placehold.it/408x250&text=No%20Image')"}
        = p.input :remove_pinterest_image, as: :boolean if @post.pinterest_image_id?
        = p.attachment_field :pinterest_image, direct: true, presigned: true, class: "image_upload"
    .manage-categories
      %h4 Categories
      %hr.thick
      .categories
        - @categories.each do |cat|
          %ul
            %li
              -if @post.categories.include?(cat)
                = check_box_tag 'category_ids[]', cat.id, input_html: { checked: true }
              -else
                = check_box_tag 'category_ids[]', cat.id
              = cat.nice_name
  .toolbar
    = p.input :title, placeholder: "Title", label: false
    %hr.thick
    -if @post.image_id?
      #image.post_image{style: "background: url(#{ attachment_url(@post, :image, :fit, 408, 250) }) no-repeat center; background-size: cover"}
    -else
      #image.post_image{style: "background: url('http://placehold.it/408x250&text=No%20Image') no-repeat center; background-size: cover"}
    %hr.thick
    =link_to "Categories and Images", "javascript:void(0)", id: "options", class: "btn btn-primary"
    %hr.thick
    .submit-actions
      = p.submit "Save as Draft", class: "button"
      = p.submit "Publish", class: "button btn-primary"

=content_for :javascript do
  -@save_url = Rails.application.routes.url_helpers.admin_auto_update_post_path
  -@request_type = "PATCH"
  :javascript
    $("#post_body").editable({
      inlineMode: false,
      fontList: {
        "Lato,Arial,Helvetica": "Normal",
        "Pompiere": "Pompiere",
        "Quicksand": "Quicksand",
        "Shadows Into Light": "Shadows Into Light",
        "Josefin Slab": "Josefin Slab",
        "Sacramento": "Sacramento"
      },
      imageUploadURL: "#{ Rails.application.routes.url_helpers.admin_create_image_path }",
      imageDeleteURL: "#{ Rails.application.routes.url_helpers.admin_destroy_image_path }",
      defaultImageWidth: 600,
      height: 500,
      spellcheck: true,
      autoSave: true,
      autosaveInterval: 2000,
      saveURL: "#{ @save_url }",
      saveParams: { #{ "id:#{@post.id}" if @post.id } },
      saveRequestType: "#{ @request_type }",
      buttons: ["bold", "italic", "underline", "strikeThrough", "fontFamily", "fontSize", "color", "formatBlock", "align", "insertOrderedList", "insertUnorderedList", "outdent", "indent", "selectAll", "createLink", "insertImage", "insertVideo", "table", "undo", "redo", "html", "insertHorizontalRule"],
      }).on("editable.imageError", function(e, editor, error) {
        if (error.code === 0) {
          return console.log(error);
        } else if (error.code === 1) {
          return console.log(error);
        } else if (error.code === 2) {
          return console.log(error);
        } else if (error.code === 3) {
          return console.log(error);
        } else if (error.code === 4) {
          return console.log(error);
        } else if (error.code === 5) {
          return console.log(error);
        } else if (error.code === 6) {
          return console.log(error);
        }
      }).on("editable.afterRemoveImage", function(e, editor, $img) {
        editor.options.imageDeleteParams = {
          src: $img.attr('src')
        };
        return editor.deleteImage($img);
      }).on('editable.imageDeleteSuccess', function(e, editor, data) {
        return console.log(data);
      }).on('editable.imageDeleteError', function(e, editor, error) {
        return console.log(error);
      });
    $("#post_body").editable("option", "autosave", true);
    var customImageButtons = $("#post_body").editable("option", "customImageButtons");
    var imageButtons = $("#post_body").editable("option", "imageButtons");
